{
  "articles": [
    {
      "path": "assignments.html",
      "title": "Assignments",
      "author": [],
      "contents": "\n\nContents\nAssignment schedule\nAssignment expectations and grading\n\nAll assignments will be posted, submitted, and graded through GitHub Classrooms.\nAssignment schedule\nAssignment #\nAssigned\nDue date\n1\n2022-09-28\n2022-10-08\n2\n2022-10-12\n2022-10-22\n3\n2022-10-26\n2022-11-12\n4\n2022-11-16\n2022-12-03\nAssignment expectations and grading\nThe rubric for each assignment will be provided when it is assigned so you know what to prioritize. You make work with up to 2 classmates, but must list your collaborators’ names on your assignment. You are encouraged to collaborate on code, but must respond to conceptual questions individually. All assignment dates will be posted in advance. Late assignments will receive 10% deduction per day, up to a maximum of 3 days. You may request a 48-hour extension if extenuating circumstances arise.\n\n\n\n",
      "last_modified": "2022-09-15T15:35:53-07:00"
    },
    {
      "path": "index.html",
      "title": "Geospatial Analysis & Remote Sensing",
      "description": "Master's of Environmental Data Science, UC Santa Barbara",
      "author": [],
      "contents": "\n\nContents\nWelcome to EDS 223\nTeaching team\nImportant links\nWeekly course schedule\nCourse requirements\nTentative topics\n\n\n\n\nFigure 1: Image: Mississippi River south of Memphis, TN, from USGS shared on Unsplash (https://unsplash.com/photos/35Z2ylLRCO8).\n\n\n\nWelcome to EDS 223\nThis course introduces the spatial modeling and analytic techniques of geographic information science to data science students. The emphasis is on deep understanding of spatial data models and the analytic operations they enable. Recognizing remotely sensed data as a key data type within environmental data science, this course will also introduce fundamental concepts and applications of remote sensing. In addition to this theoretical background, students will become familiar with libraries, packages, and APIs that support spatial analysis in R.\nWelcome!\nTeaching team\nInstructor: Ruth Oliver (rutholiver@bren.ucsb.edu)\nOffice: Bren Hall 4512\nStudent hours: Wednesday 11-12pm PT (NCEAS Sequoia Room 105)\nThe best way to contact me is: email\nTeaching assistant: Albert Garcia (agarcia@bren.ucsb.edu)\nStudent hours: Wednesday 3:30-4:30pm PT (NCEAS Sequoia Room 105)\nThe best way to contact me is: email\nImportant links\nCourse syllabus\nCode of Conduct\nWeekly course schedule\nMonday/Wednesday 9:30am - 10:45am (NCEAS)\nCourse requirements\nMinimum MEDS device requirements\nR version 4.2.0 (or higher)\nRStudio version 2022.07.01 (or higher)\nGitHub account\nTentative topics\nWeek\nLecture topics\nLab topics\n1 (9/26)\nCourse overview & intro to spatial data models\ncoordinate reference systems, map making basics\n2 (10/23)\nSpatial data models & intro to vector data\n‘sf’, attribute data operations\n3 (10/10)\nVector operations\nvector spatial & geometry operations\n4 (10/17)\nSpatial data science expert panel\nreview\n5 (10/24)\nIntro to raster data\n‘terra’, raster spatial operations\n6 (10/31)\nIntro to RS & EM radiation\nno class\n7 (11/7)\nRS data collection\ndisplaying multi-band data\n8 (11/14)\nRS expert panel\nraster geometry operations, raster-vector interactions\n9 (11/21)\nMultispectral RS analysis\nband math, PCA\n10 (11/28)\nActive RS & advanced analysis\nspatial stats basic\n\n\n\n",
      "last_modified": "2022-09-15T15:35:54-07:00"
    },
    {
      "path": "resources.html",
      "title": "Course resources",
      "author": [],
      "contents": "\n\nContents\nReadings\nMisc.\n\nReadings\nGeocompuation with R\nSpatial Data Science with applications in R\nA Gentle Introduction to GIS\nMisc.\nTidyverse style guide\n\n\n\n",
      "last_modified": "2022-09-15T15:35:55-07:00"
    },
    {
      "path": "topic_1.html",
      "title": "Introduction to spatial data",
      "author": [],
      "contents": "\n\nContents\nBackground reading\nAdditional resources\n\nBackground reading\nGeocomputation with R, chapter 7\nSpatial Data Science, chapter 2\nA Gentle Introduction to GIS, chapter 8\nAdditional resources\nWhy all world maps are wrong\nThe True Size Of…\nCompare map projections\nHow the north ended up on top of the map\nWhy maps point North on top?\n\n\n\n",
      "last_modified": "2022-09-15T15:35:56-07:00"
    },
    {
      "path": "topic_10.html",
      "title": "Topic 10: Inserting tables",
      "author": [],
      "contents": "\n\nContents\nUse the Visual Editor\nOther options\n\n\nTO UPDATE THIS PAGE: Open and edit the topic_10.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nUse the Visual Editor\nIf you want to create a table in your R Markdown from scratch that is easily editable (e.g., a table of Assignment due dates or something), it might be easiest to just make the thing manually right in your R Markdown document.\nTo do that, I strongly recommend using the RStudio Visual Editor (in RStudio versions >= 1.4), which has an easy-to-use Table maker similar to what you’d see in Word or Google Docs.\nOpen the .Rmd in which you want to add the table\nSwitch over to the visual editor by clicking on the compass-looking icon in the top right of your .Rmd screen, to the right of the ‘Run’ and ‘Publish’ buttons (hover text is “Switch to visual markdown editor”)\nIn the Visual Editor menu, click on Table, then in the dropdown Menu click ‘Insert Table’…and create & populate your new table like you would normally in non-markdown tools\nOther options\nThere are a bunch of different ways to add & format tables in R Markdown (see several of many options in David Keyes’ post on Making Beautiful Tables in R). I think most of them are most useful when you’re trying to make a finalized table with data in it, but if you really want to beautify your website tables there are options.\n\n\n\n",
      "last_modified": "2022-09-15T15:35:56-07:00"
    },
    {
      "path": "topic_2.html",
      "title": "Topic 2: Update site title and subtitle",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_2.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nOne of the first things you’ll want to do is update your site title, subtitle, and the short link on the right side of the navbar.\nHere’s how:\nThe main title and subtitle for the home page live in the YAML of the index.Rmd file. Open it in your project, update the title and description fields in the YAML, save, then build your site (In RStudio: Build > Build Website) to see the updated title.\nThe label for the short link in the upper right of the page (right side of the navigation bar) is specified in the _site.yml page. Open the _site.yml file in your project, update the Title field, save, and rebuild the site to see your update.\n\n\n\n",
      "last_modified": "2022-09-15T15:35:57-07:00"
    },
    {
      "path": "topic_3.html",
      "title": "Topic 3: Adding images",
      "author": [],
      "contents": "\n\nContents\nWhere should I save my images?\nHow do I make images show up on my site?\n\n\nTO UPDATE THIS PAGE: Open and edit the topic_3.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nWhere should I save my images?\nDrop images you want to include on your site into the existing img folder within your R Project (or make your own folder for images, set up a subfolder structure, etc.) - as long as you can easily point to them within your project.\nHow do I make images show up on my site?\nThere are a bunch of ways to add images in an R Markdown document (see more examples from the R Markdown Cookbook here).\nI recommend using knitr::include_graphics(\"path_to_image\").\nFor example, if there is an image saved as cool_dogs.jpg in the img folder, then you can add this to your R Markdown document by adding (within a code chunk):\n\n```{r, echo = FALSE}\n  knitr::include_graphics(\"img/cool_dogs.jpg\")\n```\nYou can also update the size of the image, add a caption, etc. by updating the code chunk header, e.g.:\n\n```{r, echo = FALSE, out.width = \"50%\", fig.cap = \"Some cool dogs!\"}\n  knitr::include_graphics(\"img/cool_dogs.jpg\")\n```\nFor example, the image usgs_sat.jpeg is in the img folder of this template. I can have it show up here by include a code chunk that looks like this:\n\n```{r, echo = FALSE, out.width = \"80%\", fig.cap = \"USGS image of Mississippi River.\"}\n  knitr::include_graphics(\"img/usgs_sat.jpeg\")\n```\nWhich creates:\n\n\n\nFigure 1: USGS image of Mississippi River.\n\n\n\n\n\n\n",
      "last_modified": "2022-09-15T15:35:58-07:00"
    },
    {
      "path": "topic_4.html",
      "title": "Topic 4: Change the theme",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_4.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nThe bells and whistles of this MEDS template (colors, fonts, spacing, etc.) are customized in the theme.css file in your Project root.\nIf you love css or want to make changes, you’re encouraged to customize your site! There is minor annotation in the css file, but honestly this will probably just take quite a bit of Inspect Element to figure out what to change.\nFonts: If you specifically want to know how to change the site fonts, see here.\n\n\n\n",
      "last_modified": "2022-09-15T15:35:58-07:00"
    },
    {
      "path": "topic_5.html",
      "title": "Topic 5: Basic formatting",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_5.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nIf you’re familiar with markdown, use standard syntax to update font styles, add bulleted lists, subscripts/superscripts, etc. (or learn more from the R Markdown cheatsheet).\nIf you’re not familiar with markdown and want an easier way to update formatting, there is a Visual Editor in RStudio versions > 1.4. It is absolutely worth it to check it out for easier formatting of text, images, tables, citations, and more. Read more about the new RStudio Visual Editor here.\n\n\n\n",
      "last_modified": "2022-09-15T15:35:59-07:00"
    },
    {
      "path": "topic_6.html",
      "title": "Topic 6: Internal & external links",
      "author": [],
      "contents": "\n\nContents\nLinking to internal parts of your site\nExternal links\n\n\nTO UPDATE THIS PAGE: Open and edit the topic_6.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nLinking to internal parts of your site\nSometimes you’ll want to have a link to another page in your website. How? Use the format [text](link_to_this_page.html).\nFor example, if I want to link here to the Resources page, within my .Rmd that looks like this:\n  Find more resources [here](resources.html). \nWhich, when built, looks like this:\nFind more resources here.\nExternal links\nSame thing, just add the full URL within the parentheses. For example, to link to UCSB’s home page that would look like:\n  Learn more about [UCSB](https://www.ucsb.edu/).\n  \nWhich when built looks like this:\nLearn more about UCSB.\n\n\n\n",
      "last_modified": "2022-09-15T15:35:59-07:00"
    },
    {
      "path": "topic_7.html",
      "title": "Topic 7: Remove tables of contents",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_7.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nIn this template, you’ll notice that a Table of Contents is automatically created on pages with headings (starting with Level 2 headers as top-level items).\nTo remove the auto-table of contents, open the _site.yml file. In the output section, change the toc: and toc_float: fields to false.\nThat section in _site.yml would then look like this, and the table of contents won’t appear:\noutput:\n  distill::distill_article:\n    toc: false\n    toc_float: false\n\n\n\n",
      "last_modified": "2022-09-15T15:36:00-07:00"
    },
    {
      "path": "topic_8.html",
      "title": "Topic 8: Dropdown list from a navigation bar item",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_8.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nIf you look at this template, you’ll notice that some navigation bar items go directly to a single page, while the Modules item takes you to a dropdown menu.\nTo create a dropdown menu of pages:\nCreate and save the pages as individual R Markdown documents as described here.\nOpen the _site.yml file. In the navbar section, create a menu with the pages as linked items using a structure like this:\n   - text: \"Dropdown menu\"\n      menu:\n        - text: \"First dropdown item\"\n          href: item_1.html\n        - text: \"Second dropdown item\"\n          href: item_2.html\nThe example above would only work if the new pages were created as item_1.Rmd and item_2.Rmd, so that when the site is built the rendered item_1.html and item_2.html files exist in the docs output directory.\n\n\n\n",
      "last_modified": "2022-09-15T15:36:00-07:00"
    },
    {
      "path": "topic_9.html",
      "title": "Topic 9: Changing site fonts",
      "author": [],
      "contents": "\n\nContents\nFonts are imported and specified in theme.css\nUse different fonts\n\n\nTO UPDATE THIS PAGE: Open and edit the topic_9.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nYou are welcome to use any fonts you want on your website. Here, only using Google fonts is described (there are other methods for downloading fonts and adding, not included here).\nFonts are imported and specified in theme.css\nIn your Project in RStudio, open the theme.css file.\nNear the top, you’ll see some lines that look like this:\n/* Header font */\n@import url('https://fonts.googleapis.com/css2?family=Sanchez&display=swap');\n\n/* Body font */\n@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400&display=swap');\n\n/* Code font (Roboto Mono) */\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400&display=swap');\nThose are the import command to get 3 different Google fonts (Sanchez, Nunito Sans, and Roboto Mono). You can explore many different Google fonts here.\nUse different fonts\nFind a Google Font you like.\nClick on the font. To the right of the font example text, you should see an option to ‘+ Select this style’. Click the one(s) you want to select.\nThat will probably bring up a side menu. If you don’t see that side menu, you can see your selected styles at any time by clicking on the top-right menu icon that is a grid with 3 squares and a plus sign - hovering reveals this is to ‘View your selected families’. In the Use on the web section of the side menu that appears, select the radio button for @import. It’ll look weird like this (for the Zen Dots Google Font):\n    <style>\n    @import url('https://fonts.googleapis.com/css2?family=Zen+Dots&display=swap');\n    <\/style> \nCopy everything BETWEEN (but excluding) the ending <style> and <\/style>tags\nPaste the @import line you’ve copied into the top section of theme.css near the other fonts imported there. It is now available for use in your theme.\nUpdate the css with your new fonts, replacing the existing font names with the name you’ve imported. You might want to use a Find & Replace All if you want to make sure you’re updating a font everywhere it appears in the current theme.\nRepeat for as many different fonts as you want to update in your theme.\n\n\n\n",
      "last_modified": "2022-09-15T15:36:01-07:00"
    }
  ],
  "collections": []
}
